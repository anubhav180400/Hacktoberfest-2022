class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        
        
        int n=nums1.size();
        int m=nums2.size();
        
        
        
        
        if(n>m)
        {
            return findMedianSortedArrays(nums2,nums1);
        }
        
        
        int l=0,r=n;
        
        int tar=(n+m+1)/2;
        
        while(l<=r)
        {
            int cutx=(l+r)/2;
            
            int cuty=tar-cutx;
            
            int l1=cutx>0?nums1[cutx-1]:INT_MIN;
            int r1=cutx<n?nums1[cutx]:INT_MAX;
            int l2=cuty>0?nums2[cuty-1]:INT_MIN;
            int r2=cuty<m?nums2[cuty]:INT_MAX;
            
            if(l1<=r2&&l2<=r1)
            {
                if((n+m)%2==0)
                    return (max(l1,l2)+min(r1,r2))/2.0;
                else
                    return max(l1,l2);
                
            }
            else if(l1>r2)
            {
                r=cutx-1;
            }
            else
                l=cutx+1;
        }
        
        return 0.0;
    }
};
